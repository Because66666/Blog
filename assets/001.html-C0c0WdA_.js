import{_ as i,c as a,a as e,o as n}from"./app-C8af2Aga.js";const t={};function l(h,s){return n(),a("div",null,s[0]||(s[0]=[e(`<h3 id="第一次构建" tabindex="-1"><a class="header-anchor" href="#第一次构建"><span>第一次构建：</span></a></h3><p>快捷地址：<a href="https://theme-hope.vuejs.press/zh/get-started/" target="_blank" rel="noopener noreferrer">https://theme-hope.vuejs.press/zh/get-started/</a><br> 执行：<code>bash npm init vuepress-theme-hope@latest my-docs</code>以创建模板</p><h3 id="需要自定义的配置文件" tabindex="-1"><a class="header-anchor" href="#需要自定义的配置文件"><span>需要自定义的配置文件</span></a></h3><p><code>.vuepress</code>下的<code>ts</code>文件。</p><h3 id="图标来源-不建议商用-版权问题" tabindex="-1"><a class="header-anchor" href="#图标来源-不建议商用-版权问题"><span>图标来源（不建议商用，版权问题）</span></a></h3><p>默认提供商：<a href="https://icon-sets.iconify.design/" target="_blank" rel="noopener noreferrer">https://icon-sets.iconify.design/</a><br> 默认集合：<code>fa6-solid</code><br> 快捷链接：<a href="https://icon-sets.iconify.design/fa6-solid/?keyword=fa6-solid" target="_blank" rel="noopener noreferrer">https://icon-sets.iconify.design/fa6-solid/?keyword=fa6-solid</a><br> 若使用其他集合：举例：<code>hugeicons:advertisement</code></p><h3 id="自己用的图床、图片压缩服务" tabindex="-1"><a class="header-anchor" href="#自己用的图床、图片压缩服务"><span>自己用的图床、图片压缩服务</span></a></h3><p>图片压缩：<a href="https://docsmall.com/image-compress" target="_blank" rel="noopener noreferrer">https://docsmall.com/image-compress</a><br> 图床：<a href="https://picui.cn/" target="_blank" rel="noopener noreferrer">https://picui.cn/</a></p><h3 id="侧边栏顺序控制" tabindex="-1"><a class="header-anchor" href="#侧边栏顺序控制"><span>侧边栏顺序控制：</span></a></h3><p>在<code>theme.ts</code>文件中，修改代码，示例：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 侧边栏</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  sidebar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  sidebarSorter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;readme&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,         </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// README 优先</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;date-desc&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,         </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 日期新的在前</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;title&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,      </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 标题字母序</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;filename&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">           </span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ],</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 页脚</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  footer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Because的主页&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  displayFooter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如何将html转为适用于vuepress框架页面" tabindex="-1"><a class="header-anchor" href="#如何将html转为适用于vuepress框架页面"><span>如何将html转为适用于vuepress框架页面？</span></a></h3><p>将主要的结点，写入md文件，因为markdown支持解析html语法；<br> 此外，css代码也可以随着html标签一起写入md;<br> 对于js代码，创建/.vuepress/client.ts文件，在访问特定界面的时候插入js代码。示例：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">defineClientConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;@vuepress/client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> defineClientConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  enhance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">router</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    router</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">afterEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">to</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      // 仅在访问 /docs.html 时注入脚本</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">to</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/docs.html&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        app</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mixin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">          mounted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 创建脚本元素</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> script</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;script&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 注入搜索和主题切换逻辑</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">textContent</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  const observer = new MutationObserver((mutations) =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        const searchBox = document.getElementById(&#39;searchDocs&#39;);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        const docsGrid = document.getElementById(&#39;docsGrid&#39;);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        const docCards = docsGrid.querySelectorAll(&#39;.doc-card&#39;);</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        searchBox.addEventListener(&#39;input&#39;, function() {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          const searchTerm = searchBox.value.toLowerCase().trim();</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          docCards.forEach(card =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            const title = card.querySelector(&#39;h3&#39;).textContent.toLowerCase();</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            const description = card.querySelector(&#39;p&#39;).textContent.toLowerCase();</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            const tags = card.getAttribute(&#39;data-tags&#39;).toLowerCase();</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            if (title.includes(searchTerm) || description.includes(searchTerm) || tags.includes(searchTerm)) {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              card.style.display = &#39;block&#39;;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            } else {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              card.style.display = &#39;none&#39;;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            }</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          });</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        });</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      });</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">observer.observe(document.body, {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    childList: true,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    subtree: true</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  });</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        \`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 注入到页面底部</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">        document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }})}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14)]))}const r=i(t,[["render",l]]),k=JSON.parse('{"path":"/posts/001.html","title":"vuepress-theme-hope主题构建心得","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","cover":"https://img.picui.cn/free/2025/03/25/67e26f452470d.jpg","title":"vuepress-theme-hope主题构建心得","date":"2025-03-25T00:00:00.000Z","category":["技术","主题构建"],"description":"第一次构建： 快捷地址：https://theme-hope.vuejs.press/zh/get-started/ 执行：bash npm init vuepress-theme-hope@latest my-docs以创建模板 需要自定义的配置文件 .vuepress下的ts文件。 图标来源（不建议商用，版权问题） 默认提供商：https://ic...","head":[["meta",{"property":"og:url","content":"https://because66666.github.io/Blog/Blog/posts/001.html"}],["meta",{"property":"og:site_name","content":"Because的博客"}],["meta",{"property":"og:title","content":"vuepress-theme-hope主题构建心得"}],["meta",{"property":"og:description","content":"第一次构建： 快捷地址：https://theme-hope.vuejs.press/zh/get-started/ 执行：bash npm init vuepress-theme-hope@latest my-docs以创建模板 需要自定义的配置文件 .vuepress下的ts文件。 图标来源（不建议商用，版权问题） 默认提供商：https://ic..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.picui.cn/free/2025/03/25/67e26f452470d.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-25T16:41:48.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://img.picui.cn/free/2025/03/25/67e26f452470d.jpg"}],["meta",{"name":"twitter:image:alt","content":"vuepress-theme-hope主题构建心得"}],["meta",{"property":"article:published_time","content":"2025-03-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-25T16:41:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vuepress-theme-hope主题构建心得\\",\\"image\\":[\\"https://img.picui.cn/free/2025/03/25/67e26f452470d.jpg\\"],\\"datePublished\\":\\"2025-03-25T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-25T16:41:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Because\\",\\"url\\":\\"https://github.com/because66666\\"}]}"]]},"git":{"createdTime":1742900321000,"updatedTime":1742920908000,"contributors":[{"name":"Because66666","username":"Because66666","email":"z66666z@163.com","commits":2,"url":"https://github.com/Because66666"}]},"readingTime":{"minutes":1.35,"words":405},"filePathRelative":"posts/001.md","localizedDate":"2025年3月25日","excerpt":"<h3>第一次构建：</h3>\\n<p>快捷地址：<a href=\\"https://theme-hope.vuejs.press/zh/get-started/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://theme-hope.vuejs.press/zh/get-started/</a><br>\\n执行：<code>bash npm init vuepress-theme-hope@latest my-docs</code>以创建模板</p>\\n<h3>需要自定义的配置文件</h3>\\n<p><code>.vuepress</code>下的<code>ts</code>文件。</p>","autoDesc":true}');export{r as comp,k as data};
